{"version":3,"sources":["../src/lib/MonacoProvider.js"],"names":["React","useState","useEffect","MonacoContext","monacoBaseUrl","monacoLoaderUrl","monacoWorkerMain","initialize","baseUrl","loaderUrl","workerMain","document","addEventListener","finalResolve","window","monaco","script","createElement","innerHTML","loaderScript","src","onload","onerror","finalReject","body","appendChild","Promise","resolve","reject","MonacoProvider","children","setMonaco","initializeMonaco"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,SAAQC,aAAR,QAA4B,YAA5B;AAEA;;AACA,IAAMC,aAAa,GAAO,0DAA1B;AACA,IAAMC,eAAe,GAAK,oEAA1B;AACA,IAAMC,gBAAgB,GAAI,oFAA1B;AAGA,OAAO,IAAMC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gCAASC,OAAT,EAASA,OAAT,6BAAmBJ,aAAnB,uCAAkCK,SAAlC,EAAkCA,SAAlC,+BAA8CJ,eAA9C,0CAA+DK,UAA/D,EAA+DA,UAA/D,gCAA4EJ,gBAA5E;AAGtBK,YAAAA,QAAQ,CAACC,gBAAT,CAA0B,aAA1B,EAAyC,YAAM;AAC3C;AACAC,cAAAA,YAAY,CAACC,MAAM,CAACC,MAAR,CAAZ;AACH,aAHD;AAKMC,YAAAA,MARgB,GAQPL,QAAQ,CAACM,aAAT,CAAuB,QAAvB,CARO;AAStBD,YAAAA,MAAM,CAACE,SAAP,wDACuCd,aADvC;AAYMe,YAAAA,YArBgB,GAqBDR,QAAQ,CAACM,aAAT,CAAuB,QAAvB,CArBC;AAsBtBE,YAAAA,YAAY,CAACC,GAAb,GAAmBf,eAAnB;;AAEAc,YAAAA,YAAY,CAACE,MAAb,GAAsB,YAAM;AACxBL,cAAAA,MAAM,CAACM,OAAP,GAAiBC,WAAjB;AAEAZ,cAAAA,QAAQ,CAACa,IAAT,CAAcC,WAAd,CAA0BT,MAA1B;AACH,aAJD;;AAMAG,YAAAA,YAAY,CAACG,OAAb,GAAuBC,WAAvB;AACAZ,YAAAA,QAAQ,CAACa,IAAT,CAAcC,WAAd,CAA0BN,YAA1B;AA/BsB,6CAiCf,IAAIO,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCf,cAAAA,YAAY,GAAGc,OAAf;AACAJ,cAAAA,WAAW,GAAGK,MAAd;AACH,aAHM,CAjCe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVrB,UAAU;AAAA;AAAA;AAAA,GAAhB;AAuCP;;;;;;;;AAQA,OAAO,IAAMsB,cAAc,GAAG,SAAjBA,cAAiB,QAAkD;AAAA,MAA/CrB,OAA+C,SAA/CA,OAA+C;AAAA,MAAtCC,SAAsC,SAAtCA,SAAsC;AAAA,MAA3BC,UAA2B,SAA3BA,UAA2B;AAAA,MAAfoB,QAAe,SAAfA,QAAe;;AAAA,kBAChD7B,QAAQ,EADwC;AAAA;AAAA,MACrEc,MADqE;AAAA,MAC7DgB,SAD6D;;AAG5E7B,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAM8B,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACfjB,gBAAAA,MADe,GACNR,UAAU,CAAC;AAAEC,kBAAAA,OAAO,EAAPA,OAAF;AAAWC,kBAAAA,SAAS,EAATA,SAAX;AAAsBC,kBAAAA,UAAU,EAAVA;AAAtB,iBAAD,CADJ;AAErBqB,gBAAAA,SAAS,CAAChB,MAAD,CAAT;;AAFqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAhBiB,gBAAgB;AAAA;AAAA;AAAA,OAAtB;;AAKAA,IAAAA,gBAAgB;AACnB,GAPQ,EAON,EAPM,CAAT;AASA,SACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,MAAM,EAAEjB;AAAhC,KACMe,QADN,CADJ;AAKH,CAjBM;AAmBP,eAAeD,cAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nimport {MonacoContext} from \"../context\";\n\n/* default CDN locations for monaco, can be overriden by initialize() */\nconst monacoBaseUrl     = \"https://cdn.jsdelivr.net/npm/monaco-editor@0.17.1/min/vs\";\nconst monacoLoaderUrl   = \"https://cdn.jsdelivr.net/npm/monaco-editor@0.17.1/min/vs/loader.js\";\nconst monacoWorkerMain  = \"https://cdn.jsdelivr.net/npm/monaco-editor@0.17.1/min/vs/base/worker/workerMain.js\";\n\n\nexport const initialize = async ({ baseUrl = monacoBaseUrl, loaderUrl = monacoLoaderUrl, workerMain = monacoWorkerMain }) => {\n    let finalResolve, finalReject;\n\n    document.addEventListener(\"monaco_init\", () => {\n        /* we've initialized everything and should have window.monaco now */\n        finalResolve(window.monaco);\n    });\n\n    const script = document.createElement(\"script\");\n    script.innerHTML = `\n        require.config({ paths: { 'vs': '${monacoBaseUrl}' }});\n        window.MonacoEnvironment = {\n            getWorkerUrl: function(workerId, label) {\n                return \"data:text/javascript;charset=utf-8,%0A%20%20%20%20%20%20%20%20self.MonacoEnvironment%20%3D%20%7B%0A%20%20%20%20%20%20%20%20%20%20baseUrl%3A%20'https%3A%2F%2Fcdn.jsdelivr.net%2Fnpm%2Fmonaco-editor%400.17.1%2Fmin%2F'%0A%20%20%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%20%20%20%20importScripts('https%3A%2F%2Fcdn.jsdelivr.net%2Fnpm%2Fmonaco-editor%400.17.1%2Fmin%2Fvs%2Fbase%2Fworker%2FworkerMain.js')%3B\"\n            }\n        };\n        require(['vs/editor/editor.main'], function() {\n            document.dispatchEvent(new Event('monaco_init'));\n        });\n    `;\n\n    const loaderScript = document.createElement(\"script\");\n    loaderScript.src = monacoLoaderUrl;\n\n    loaderScript.onload = () => {\n        script.onerror = finalReject;\n\n        document.body.appendChild(script);\n    };\n\n    loaderScript.onerror = finalReject;\n    document.body.appendChild(loaderScript);\n\n    return new Promise((resolve, reject) => {\n        finalResolve = resolve;\n        finalReject = reject;\n    });\n};\n\n/**\n * MonacoProvider\n *\n * This component loads the monaco environment, then passes\n * it along to other components via React Context.\n *\n */\n\nexport const MonacoProvider = ({ baseUrl, loaderUrl, workerMain, children }) => {\n    const [monaco, setMonaco] = useState();\n\n    useEffect(() => {\n        const initializeMonaco = async () => {\n            const monaco = initialize({ baseUrl, loaderUrl, workerMain });\n            setMonaco(monaco);\n        };\n\n        initializeMonaco();\n    }, []);\n\n    return (\n        <MonacoContext.Provider monaco={monaco}>\n            { children }\n        </MonacoContext.Provider>\n    );\n};\n\nexport default MonacoProvider;\n"],"file":"MonacoProvider.js"}